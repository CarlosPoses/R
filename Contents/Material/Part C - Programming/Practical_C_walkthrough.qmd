---
title: "Practical C"
author: "Javier Garcia-Bernardo"
date: "11/27/2023"
format:
  html:
    toc: true
    toc-location: left
    toc-depth: 5
    code-fold: true
    code-tools: true
    number-sections: false
---

# Exercises
In this practical we will go over reproducibility, control flow (if-else statements and for loops), and functions.

First, create a new project (File -> New Project), install `renv` and initialize the dependency management (`renv::init()`).

Then, create a new notebook for this homework (File -> New File -> Quarto document -> Document)

In the following exercises we will use the same dataset as last time, boys.

You need to download `dataset_boys.csv` from [here](https://javier.science/R/Contents/Material/common_datasets/dataset_boys.csv) and add it to a folder "data" in the same folder as your markdown file. In t

Then, read the file dataset_boys.csv using the code in the next cell.

```{r}
#| echo = FALSE
#install.packages(c("readr", "stringr), repos = "http://cran.us.r-project.org")
library(readr)
library(stringr)


# Reading the file in the background
boys <- readr::read_delim("../common_datasets/dataset_boys.csv",delim=",")
# Keep only a few columns
boys <- boys[, c("age","wgt","bmi")]
# Drop missing values
boys <- na.omit(boys)
```

```{r}
#| output = FALSE
#install.packages(c("readr", "stringr), repos = "http://cran.us.r-project.org")
library(readr)
library(stringr)

# Reading the file in the background
boys <- readr::read_delim("data/dataset_boys.csv",delim=",")
# Keep only a few columns
boys <- boys[, c("age","wgt","bmi")]
# Drop missing values
boys <- na.omit(boys)
```

---

## Exercise 1-3: Control-flow 


1. **Create a `for`-loop that loops over all numbers between 0 and 10, but only prints numbers 3, 4, and 5. **

```{r}
for (i in 0:10) {
  if (i %in% 3:5) {
    print(i)
  }
}
```


2. **Try to do the same thing without a for-loop, by subsetting a vector from 0 to 10 directly.**

```{r}
num <- 0:10
num[num >= 3 & num <=5]
``` 



---

## Exercise 3--5: Functions

3. **Create a function that calculates the sample standard deviation. Validate it by comparing the output to the function `sd()`. Write documentation for such function.** 

$$\sigma = \sqrt{\frac{1}{N-1}\sum_{i=0}^N{(x_i - \bar{x})^2}}$$

```{r}
#' Calculate the standard deviation of a 
#' \sigma = \sqrt{\frac{1}{N-1}\sum_{i=0}^N{(x_i - \bar{x})^2}}$$
#' 
#' @param values A numeric vector
#' @returns STD of the vector
#' @examples
#' std_own(c(3,5,4))
std_own <- function(values) {
  s <- sqrt(1/(length(values)-1)*sum((values - mean(values))^2))
  return(s)
}

std_own(c(1,2,3,3))
sd(c(1,2,3,3))
```


4. **Use a for loop to apply the function to the columns** `c("age","hgt")` **of the dataset** `boys`. Boys is a tibble (more on this later today), you'll need to use the notation `boys[["age"]]` to extract the vector of values of the column.

```{r}
for (col in c("age","wgt")) {
  print(col)
  print(std_own(boys[[col]]))
}
```

5. **Redo exercise 5 using apply, sapply or lapply**.

```{r}
#Returns vector
apply(boys[, c("age","wgt")], MARGIN=2, FUN=std_own)
#Returns vector
sapply(boys[, c("age","wgt")], FUN=std_own)
#Returns list
lapply(boys[, c("age","wgt")], FUN=std_own)
```

---

## Exercise 6--7: Dependency files and a more complicated example

6. **Export your dependency files (`renv::snapshot()`). Which files were created?**
```{r}
renv::snapshot()

#Look inside renv.lock and .Rprofile
```



7. **Find all libraries used in the .Rmd files of https://github.com/jgarciab/R**. Steps: 
- Download the materials; 
- Use `list.files(path=???, pattern=???, full.names=TRUE, recurseive=TRUE)` to find all Rmd files;
- Use `sapply` and `readLines` to read all files; 
- Use `lapply` and `stringr::str_match_all` to find the pattern `library\\(.*\\)`.


```{r warning=FALSE}
# Find the name of the files (you'll have to adjust the path)
files <- list.files(path="../..", pattern="*qmd", full.names=TRUE, recursive=TRUE)

# Read files
files_list <- sapply(files, readLines)

# Find the pattern in all files
files_list <- lapply(files_list, 
                     function(x) str_match_all(x, "library\\(.*\\)"))

#Create a (named) vector 
files_list <- unlist(files_list)

# Print pattern
files_list
```


8. **If you are done, try to upload your files to github.**. Steps: 
- Create an account. 
- Create a new repository. 
- Upload files. 

If interested, try to set up git in your RStudio (https://support.posit.co/hc/en-us/articles/200532077)


---
